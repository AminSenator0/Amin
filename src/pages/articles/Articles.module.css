.articles {
  display: grid;
  align-items: start;
  justify-items: center;
  grid-template-rows: 1fr auto;
  min-height: 100%;
}

.grid {
  max-width: 1800px;
  display: grid;
  align-items: start;
  grid-template-columns: 1fr 55%;
  padding-top: var(--spaceOuter);
  padding-bottom: var(--space4XL);
  padding-left: var(--space3XL);
  padding-right: var(--spaceL);
  gap: var(--space4XL);
  height: 100%;

  @media (--mediaDesktop) {
    padding-left: 0;
  }

  @media (--mediaLaptop) {
    gap: var(--space2XL);
    padding-bottom: var(--space3XL);
  }

  @media (max-width: 1140px) {
    gap: var(--space3XL);
    padding-right: 0;
    grid-template-columns: 100%;
  }

  @media (--mediaMobile) {
    padding-bottom: var(--spaceXL);
    padding-top: 100px;
  }
}

.header {
  padding-top: var(--spaceS);
  padding-bottom: var(--space2XL);
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: center;
}

.heading {
  white-space: nowrap;
  overflow: hidden;
}

.list {
  display: grid;
}

.divider {
  border: 0;
  border-top: 1px solid rgb(var(--rgbText) / 0.1);
}

.post {
  --featuredPostPadding: var(--space4XL);
  --postBorder: 1px solid rgb(var(--rgbText) / 0.1);

  position: relative;
  isolation: isolate;
  border-top: var(--postBorder);

  &:last-child {
    border-bottom: var(--postBorder);
  }

  @media (--mediaLaptop) {
    --featuredPostPadding: var(--space3XL);
  }

  @media (--mediaTablet) {
    --featuredPostPadding: var(--spaceXL);
  }

  @media (--mediaMobile) {
    --featuredPostPadding: var(--spaceOuter);
  }

  &[data-featured='true'] {
    margin: 0;
    border: 0;
    position: sticky;
    top: var(--spaceOuter);
    height: calc(100vh - (var(--spaceOuter) * 2));
    display: grid;

    @media (max-width: 1140px) {
      position: relative;
      height: auto;
      padding-top: 50%;
      top: 0;
    }
  }
}

.postLabel,
.postTag {
  position: absolute;
  background-color: rgb(var(--rgbBackground));
  padding: var(--spaceXS) var(--spaceM);
  z-index: 1;
  color: var(--colorTextLight);
}

.postLabel {
  top: 0;
  left: calc((var(--spaceM) * -1) + var(--featuredPostPadding));
  transform: translateY(-50%);
}

.postTag {
  bottom: 30%;
  right: 0;
  transform: translateX(50%) rotate(-90deg);
}

.postLink {
  --linkPadding: var(--space3XL);

  display: flex;
  position: relative;
  align-items: flex-end;
  padding: var(--linkPadding) 0;

  @media (--mediaLaptop) {
    --linkPadding: var(--space2XL);
  }

  @nest [data-featured='false'] & {
    &::before {
      content: '';
      position: absolute;
      inset: var(--spaceXL) calc(var(--spaceXL) * -1);
      transform: scale3d(0, 1, 1);
      transform-origin: right;
      background-color: rgb(var(--rgbBackgroundLight));
      transition: transform var(--durationM) var(--bezierFastoutSlowin);
    }

    &:hover::before {
      @media (--mediaUseMotion) {
        transform: scale3d(1, 1, 1);
        transform-origin: left;
      }
    }
  }

  @nest [data-featured='true'] & {
    padding: var(--featuredPostPadding);
  }
}

.postDate {
  display: grid;
  grid-template-columns: 128px 1fr;
  gap: var(--spaceM);
  align-items: center;
  color: rgb(var(--rgbPrimary));
  justify-self: stretch;
  margin-bottom: var(--spaceS);
}

.postImage {
  position: absolute;
  inset: 0;
  display: grid;
  place-content: stretch;
  overflow: hidden;
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 32px), calc(100% - 32px) 100%, 0 100%);
  isolation: isolate;

  &::after {
    content: '';
    position: absolute;
    inset: 0;
    mix-blend-mode: luminosity;
    background-image: linear-gradient(
      -135deg,
      rgb(var(--rgbBackgroundLight) / 0.5) 0%,
      rgb(var(--rgbBackgroundLight) / 0.86) 60%,
      rgb(var(--rgbBackgroundLight) / 0.95) 100%
    );
  }

  & :where(img, video) {
    object-fit: cover;
    height: 100%;
  }
}

.postDetails {
  position: relative;
  display: grid;
  justify-items: start;
  gap: var(--spaceL);
}

.postFooter {
  display: flex;
  grid-auto-flow: column;
  justify-content: space-between;
  justify-self: stretch;
  flex-wrap: wrap;
  gap: var(--spaceS);

  & button {
    position: relative;
    left: -8px;
  }
}

.timecode {
  display: flex;
  align-items: center;
  gap: var(--spaceM);

  &::before {
    content: '';
    width: 42px;
    height: 2px;
    background-color: rgb(var(--rgbText) / 0.2);
  }
}
